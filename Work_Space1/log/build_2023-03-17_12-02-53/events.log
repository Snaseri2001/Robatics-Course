[0.000000] (-) TimerEvent: {}
[0.000102] (-) JobUnselected: {'identifier': 'interfaces'}
[0.000135] (-) JobUnselected: {'identifier': 'turtlesim_controller'}
[0.000162] (-) JobUnselected: {'identifier': 'yinsim'}
[0.000224] (yangsim) JobQueued: {'identifier': 'yangsim', 'dependencies': OrderedDict([('interfaces', '/home/soroush/robatics/Assignment2/assi2/install/interfaces')])}
[0.000255] (yangsim) JobStarted: {'identifier': 'yangsim'}
[0.017358] (yangsim) JobProgress: {'identifier': 'yangsim', 'progress': 'cmake'}
[0.018720] (yangsim) JobProgress: {'identifier': 'yangsim', 'progress': 'build'}
[0.019444] (yangsim) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/soroush/robatics/Assignment2/assi2/build/yangsim', '--', '-j8', '-l8'], 'cwd': '/home/soroush/robatics/Assignment2/assi2/build/yangsim', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'soroush'), ('LC_TIME', 'fa_IR.UTF-8'), ('HOSTNAME', 'rosbox.soroush-HP-Laptop-15-da0xxx'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/home/soroush/robatics/Assignment2/assi2/install/interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/soroush'), ('OLDPWD', '/home/soroush'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'fa_IR.UTF-8'), ('DISTROBOX_ENTER_PATH', '/usr/local/bin/distrobox-enter'), ('SYSTEMD_EXEC_PID', '2078'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'soroush'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'soroush'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin:/home/soroush/.local/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/soroush-HP-Laptop-15-da0xxx:@/tmp/.ICE-unix/1895,unix/soroush-HP-Laptop-15-da0xxx:/tmp/.ICE-unix/1895'), ('PAPERSIZE', 'a4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'fa_IR.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/f27e8d07_3d23_4519_8bea_63d868ac8e3d'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'C.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'fa_IR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.UY5Z11'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.102'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/soroush/robatics/Assignment2/assi2/install/interfaces:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'fa_IR.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'fa_IR.UTF-8'), ('LC_IDENTIFICATION', 'fa_IR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/soroush/robatics/Assignment2/assi2/build/yangsim'), ('CONTAINER_ID', 'rosbox'), ('LC_ALL', 'C.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/soroush/robatics/Assignment2/assi2/install/interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'fa_IR.UTF-8'), ('LC_PAPER', 'fa_IR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/soroush/robatics/Assignment2/assi2/install/interfaces:/opt/ros/humble')]), 'shell': False}
[0.099230] (-) TimerEvent: {}
[0.172130] (yangsim) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target yangnode\x1b[0m\n'}
[0.199369] (-) TimerEvent: {}
[0.233509] (yangsim) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/yangnode.dir/src/yangnode.cpp.o\x1b[0m\n'}
[0.299511] (-) TimerEvent: {}
[0.399852] (-) TimerEvent: {}
[0.500119] (-) TimerEvent: {}
[0.600391] (-) TimerEvent: {}
[0.700791] (-) TimerEvent: {}
[0.801427] (-) TimerEvent: {}
[0.901730] (-) TimerEvent: {}
[1.002018] (-) TimerEvent: {}
[1.102306] (-) TimerEvent: {}
[1.202586] (-) TimerEvent: {}
[1.302858] (-) TimerEvent: {}
[1.403140] (-) TimerEvent: {}
[1.503422] (-) TimerEvent: {}
[1.603716] (-) TimerEvent: {}
[1.704004] (-) TimerEvent: {}
[1.804296] (-) TimerEvent: {}
[1.904601] (-) TimerEvent: {}
[2.004865] (-) TimerEvent: {}
[2.105137] (-) TimerEvent: {}
[2.205424] (-) TimerEvent: {}
[2.305716] (-) TimerEvent: {}
[2.406024] (-) TimerEvent: {}
[2.506327] (-) TimerEvent: {}
[2.606653] (-) TimerEvent: {}
[2.706985] (-) TimerEvent: {}
[2.807296] (-) TimerEvent: {}
[2.891432] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:40:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct interfaces::srv::FirstSreviceMessage\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[2.891603] (yangsim) StderrLine: {'line': b'   40 | callbackService(const interfaces::srv::FirstSreviceMessage::\x1b[01;31m\x1b[Krequest\x1b[m\x1b[K::SharedPtr request  ,\n'}
[2.891680] (yangsim) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.891858] (yangsim) StderrLine: {'line': b'\n'}
[2.891942] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:40:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.892026] (yangsim) StderrLine: {'line': b'   40 | nst interfaces::srv::FirstSreviceMessage::request::SharedPtr \x1b[01;31m\x1b[Krequest\x1b[m\x1b[K  ,\n'}
[2.892095] (yangsim) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.892159] (yangsim) StderrLine: {'line': b'\n'}
[2.892222] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:40:88:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.892299] (yangsim) StderrLine: {'line': b'   40 | nst interfaces::srv::FirstSreviceMessage::request::SharedPtr\x1b[01;31m\x1b[K \x1b[m\x1b[K\x1b[32m\x1b[Krequest\x1b[m\x1b[K  ,\n'}
[2.892363] (yangsim) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.892425] (yangsim) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K)\x1b[m\x1b[K\n'}
[2.892487] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:40:79:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[2.892550] (yangsim) StderrLine: {'line': b'   40 | ervice(const interfaces::srv::FirstSreviceMessage::request::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K request  ,\n'}
[2.892612] (yangsim) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.892673] (yangsim) StderrLine: {'line': b'      |                                                                      \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[2.893656] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:40:89:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krequest\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[2.893760] (yangsim) StderrLine: {'line': b'   40 | nst interfaces::srv::FirstSreviceMessage::request::SharedPtr \x1b[01;31m\x1b[Krequest\x1b[m\x1b[K  ,\n'}
[2.893834] (yangsim) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.893902] (yangsim) StderrLine: {'line': b'\n'}
[2.902982] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Kyang::yang()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.903119] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:28:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kserver_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.903196] (yangsim) StderrLine: {'line': b'   28 |             \x1b[01;31m\x1b[Kserver_\x1b[m\x1b[K = this->create_service<interfaces::srv::FirstSreviceMessage>(\n'}
[2.903274] (yangsim) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.907400] (-) TimerEvent: {}
[2.925396] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:32:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass yang\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Ktimer_\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.925555] (yangsim) StderrLine: {'line': b'   32 |             this->\x1b[01;31m\x1b[Ktimer_\x1b[m\x1b[K = this->create_wall_timer(\n'}
[2.925631] (yangsim) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[2.925701] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:34:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KYangAsClient\x1b[m\x1b[K\xe2\x80\x99 is not a class, namespace, or enumeration\n'}
[2.925783] (yangsim) StderrLine: {'line': b'   34 |             std::bind(&\x1b[01;31m\x1b[KYangAsClient\x1b[m\x1b[K::send_goal, this));\n'}
[2.925852] (yangsim) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.936088] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint yang::asci_convertor(std::string, int64_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.936261] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:48:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstr\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.936341] (yangsim) StderrLine: {'line': b"   48 |           message.erase(std::remove(message.begin(), \x1b[01;31m\x1b[Kstr\x1b[m\x1b[K.end(), ' '), message.end());\n"}
[2.936414] (yangsim) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.936484] (yangsim) StderrLine: {'line': b'      |                                                      \x1b[32m\x1b[Kstd\x1b[m\x1b[K\n'}
[3.007552] (-) TimerEvent: {}
[3.107838] (-) TimerEvent: {}
[3.208140] (-) TimerEvent: {}
[3.308427] (-) TimerEvent: {}
[3.318590] (yangsim) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39\x1b[m\x1b[K,\n'}
[3.318798] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[3.318989] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[3.319214] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[3.319288] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[3.319366] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[3.319432] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[3.319498] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[3.319563] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[3.319627] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[3.319692] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:1\x1b[m\x1b[K:\n'}
[3.319756] (yangsim) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.319822] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.319892] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:76:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = interfaces::srv::FirstSreviceMessage]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.319969] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.320058] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.320138] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:28:81:\x1b[m\x1b[K   required from here\n'}
[3.320203] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:51:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[3.320269] (yangsim) StderrLine: {'line': b'   51 |   using \x1b[01;31m\x1b[Karguments\x1b[m\x1b[K = typename tuple_tail<\n'}
[3.320332] (yangsim) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.320395] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:57:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[3.320465] (yangsim) StderrLine: {'line': b'   57 |   using \x1b[01;31m\x1b[Kargument_type\x1b[m\x1b[K = typename std::tuple_element<N, arguments>::type;\n'}
[3.320535] (yangsim) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.320598] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:59:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[3.320663] (yangsim) StderrLine: {'line': b'   59 |   using \x1b[01;31m\x1b[Kreturn_type\x1b[m\x1b[K = typename function_traits<decltype( &FunctionT::operator())>::return_type;\n'}
[3.320727] (yangsim) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.320791] (yangsim) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[3.320855] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[3.320919] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[3.320982] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[3.321046] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[3.321115] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[3.321178] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[3.321241] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[3.321305] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[3.321369] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[3.321433] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:1\x1b[m\x1b[K:\n'}
[3.321496] (yangsim) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = interfaces::srv::FirstSreviceMessage]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.321564] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.321643] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.321712] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:28:81:\x1b[m\x1b[K   required from here\n'}
[3.321776] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:76:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.321861] (yangsim) StderrLine: {'line': b'   76 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[3.321925] (yangsim) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.322570] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:83:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.322651] (yangsim) StderrLine: {'line': b'   83 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[3.322713] (yangsim) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.325189] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:90:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.325302] (yangsim) StderrLine: {'line': b'   90 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[3.325390] (yangsim) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.326732] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:97:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.326838] (yangsim) StderrLine: {'line': b'   97 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[3.326910] (yangsim) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.331184] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[3.331316] (yangsim) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[3.331397] (yangsim) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.331572] (yangsim) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[3.331948] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[3.332043] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[3.332115] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[3.332183] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[3.332247] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[3.332311] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[3.332374] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[3.332437] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[3.332510] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[3.332572] (yangsim) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:1\x1b[m\x1b[K:\n'}
[3.332641] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.332720] (yangsim) StderrLine: {'line': b' 1477 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[3.332783] (yangsim) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.332844] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1477:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.332907] (yangsim) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.332988] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1473:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333103] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = interfaces::srv::FirstSreviceMessage]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333171] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333352] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333423] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:28:81:\x1b[m\x1b[K   required from here\n'}
[3.333488] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1391:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333561] (yangsim) StderrLine: {'line': b' 1391 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[3.333625] (yangsim) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.333687] (yangsim) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = interfaces::srv::FirstSreviceMessage]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.333753] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333824] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = interfaces::srv::FirstSreviceMessage; CallbackT = std::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.333891] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/home/soroush/robatics/Assignment2/assi2/src/yangsim/src/yangnode.cpp:28:81:\x1b[m\x1b[K   required from here\n'}
[3.333954] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.334031] (yangsim) StderrLine: {'line': b' 1414 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[3.334098] (yangsim) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.334161] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1414:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.334231] (yangsim) StderrLine: {'line': b' 1414 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[3.334293] (yangsim) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.334354] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.334426] (yangsim) StderrLine: {'line': b' 1415 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[3.334489] (yangsim) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.334552] (yangsim) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1415:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (yang::*(yang*, std::_Placeholder<1>, std::_Placeholder<2>))(...)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<interfaces::srv::FirstSreviceMessage> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<interfaces::srv::FirstSreviceMessage_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.334634] (yangsim) StderrLine: {'line': b' 1415 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[3.334699] (yangsim) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.408575] (-) TimerEvent: {}
[3.508866] (-) TimerEvent: {}
[3.609151] (-) TimerEvent: {}
[3.709447] (-) TimerEvent: {}
[3.779249] (yangsim) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/yangnode.dir/build.make:76: CMakeFiles/yangnode.dir/src/yangnode.cpp.o] Error 1\n'}
[3.779532] (yangsim) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/yangnode.dir/all] Error 2\n'}
[3.779719] (yangsim) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.781892] (yangsim) CommandEnded: {'returncode': 2}
[3.810594] (-) TimerEvent: {}
[3.826306] (yangsim) JobEnded: {'identifier': 'yangsim', 'rc': 2}
[3.836814] (-) EventReactorShutdown: {}
